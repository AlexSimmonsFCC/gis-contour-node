{
    "swagger":"2.0",
    "info": {
        "version": "0.0.1",
        "title": "FCC Contour API"
    },
    "host": "localhost:1979",
    "schemes":["http"],
    "basePath": "/",
    "tags":[
        {
            "name":"contour",
            "description":"Contour"
        }
    ],
    "paths":{
        "/folder/findById/{folderId}.{format}": {
            "get":{
                "tags": ["contour"],
                "summary": "Get Subfolder and files",
                "description": "Get OPIF folder information including list of subfolders and files. Response returned in specified format.",
                "parameters": [
                    {
                        "$ref":"#/parameters/folderIdParam"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkReqParam"
                    }
                   ],
                "responses": {
                    "200": {
                        "description": "get folder response",
                        "schema": {
                             "$ref": "#/definitions/Entity"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }            
        },
        "/folder/listParents.{format}": {
            "get":{
                "tags": ["contour"],
                "summary": "Get parent folders",
                "description": "Get root folder information including list of subfolders and files. Response returned in specified format.",
                "parameters": [
                    {
                        "$ref":"#/parameters/facilityIdParam"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                                        {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkReqParam"
                    }
                   ],
                "responses": {
                    "200": {
                        "description": "get parent folders response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Folder"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }            
        },
        "/folder/create.{format}": {
            "post":{
                "tags": ["contour"],
                "summary": "Create new folder",
                "description": "Create new folder with the folder details specified.",
                "parameters": [
                    {
                        "name":"folderName",
                        "in":"query",
                        "description":"Name of the new folder.",
                        "required":true,
                        "type":"string"
                    },
                    {
                         "$ref":"#/parameters/facilityIdParam"
                    },
                    {
                        "name":"parentFolderId",
                        "in":"query",
                        "description": "Unique Id of the parent folder",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"parentFolderType",
                        "in":"query",
                        "description":"Parent folder type.<br /><br />Valid values: M or E",
                        "required":true,
                        "type":"string"
                    },
                    {
                       "$ref":"#/parameters/accessTokenParam" 
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkOptParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create folder response",
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/rename/{folderId}.{format}": {
            "put":{
                "tags": ["contour"],
                "summary": "Rename Folder",
                "description": "Rename the folder with the specified folder name.",
                "parameters": [
                    {
                        "$ref":"#/parameters/folderIdParam"
                    },
                    {
                        "name":"folderName",
                        "in":"query",
                        "description":"New name of the specified folder",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkOptParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "rename folder response",
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/restore/{folderId}.{format}": {
            "put":{
                "tags": ["contour"],
                "summary": "Restore Folder",
                "description": "Restore the status of the folder with the specified id.",
                "parameters": [
                    {
                        "$ref":"#/parameters/folderIdParam"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkOptParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "restore folder response",
                        "schema": {
                            "$ref": "#/definitions/Folder"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/remove/{folderId}.{format}": {
            "delete":{
                "tags": ["contour"],
                "summary": "Remove Folder",
                "description": "Mark the specified folder as deleted.",
                "parameters": [                    
                    {
                        "$ref":"#/parameters/folderIdParam"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkOptParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "remove folder response",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/purge/{folderId}.{format}": {
            "delete":{
                "tags": ["contour"],
                "summary": "Purge Folder",
                "description": "Purge the folder with the specified id.",
                "parameters": [                    
                    {
                        "$ref":"#/parameters/folderIdParam"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkOptParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purge folder response",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/history.{format}": {
            "get":{
                "tags": ["contour"],
                "summary": "List changed folders",
                "description": "Lists folders that were modified.",
                "parameters": [                 
                    {
                        "name":"count",
                        "in":"query",
                        "description":"Number of folders in the list.",
                        "required":false,
                        "type":"integer",
                        "format": "int32"
                    },
                    {
                        "name":"status",
                        "in":"query",
                        "description":"Status of folder in the list.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"facilityId",
                        "in": "query",
                        "description":"Unique Facility Id.",
                        "required": true,
                        "type":"string"
                    },
                    {
                        "name":"startDate",
                        "in":"query",
                        "description": "Date in ISO-8601 format.<br /><br />YYYY-MM-DD (eg 2015-08-25)",
                        "required": false,
                        "type":"string",
                        "format": "date"
                    },
                    {
                        "name":"endDate",
                        "in":"query",
                        "description": "Date in ISO-8601 format.<br /><br />YYYY-MM-DD (eg 2015-08-25)",
                        "required": false,
                        "type":"string",
                        "format": "date"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkReqParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of changed files response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Folder"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        },
        "/folder/search/{searchKey}.{format}": {
            "get":{
                "tags": ["contour"],
                "summary": "Search for folders",
                "description": "List of folders that match the search parameter.",
                "parameters": [                 
                    {
                        "name":"searchKey",
                        "in":"path",
                        "description":"Search parameter.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "$ref":"#/parameters/formatParam"
                    },
                    {
                        "$ref":"#/parameters/callbackParam"
                    },
                    {
                        "$ref":"#/parameters/pkReqParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search folders response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Folder"
                            }
                        }
                   }
                },
                "produces": [
                    "application/json",
                    "application/jsonp",
                    "application/xml"
                ]
            }
        }
    },
    "parameters": {
       "fileIdParam": {
            "name":"fileId",
            "in":"path",
            "description":"Unique Id of the file",
            "required":true,
            "type":"string"
        },
        "fileNameParam": {
            "name":"fileName",
            "in":"query",
            "description":"Partial or complete file name.",
            "required":true,
            "type":"string"
        },
        "folderIdParam": {
            "name":"folderId",
            "in":"path",
            "description":"Unique Id of the folder",
            "required":true,
            "type":"string"
        },
        "folderNameParam": {
            "name":"folderName",
            "in":"query",
            "description":"Partial or complete folder name.",
            "required":true,
            "type":"string"
        },
        "accessTokenParam": {
            "name": "accessToken",
            "in": "query",
            "description": "Access Token used for authentication.",
            "required": true,
            "type": "string"
        },
        "uuidParam":{
            "name":"uuid",
            "in": "query",
            "description":"Unique Id.",
            "required": true,
            "type":"string"
        },
        "facilityIdParam":{
            "name":"facilityId",
            "in": "query",
            "description":"Unique Facility Id.",
            "required": true,
            "type":"string"
        },
        "formatParam":{
            "name":"format",
            "in":"path",
            "description":"Format for the returned results.<br /><br />Valid values: json, jsonp, xml",
            "required":true,
            "type":"string",
            "enum": [
                "json",
                "jsonp",
                "xml"
            ]
        },
        "callbackParam":{
            "name":"callback",
            "in":"query",
            "description":"Callback parameter - required for jsonp requests.",
            "required":false,
            "type":"string"
        },
        "pkOptParam":{
            "name":"pk",
            "in":"query",
            "description":"Public key of application - optional unless required by file.",
            "required":false,
            "type":"string"
        },
        "pkReqParam":{
            "name":"pk",
            "in":"query",
            "description":"Public key of application - required for this operation.",
            "required":false,
            "type":"string"
        }   
    },
    "definitions": {
        "File": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileName": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                    },
                "folderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "File Status",
                    "enum": [
                        "saved",
                        "uploaded",
                        "converted"
                    ]
                }
            },
            "xml": {
                "name": "response"
            }
        },
        "Folder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "folderName": {
                    "type": "string"
                },
                "parentFolderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Entity": {
            "type": "object",
            "properties": {
                "contour": {
                   "$ref": "#/definitions/Folder"
                },
                "subFolders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Folder"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/File"
                    }
                }                
            }
        },
        "FileUploadStats": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "fileUploadCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "fileErrorCount": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    },
    "produces": [
        "application/json",
        "application/xml"
    ]
}
